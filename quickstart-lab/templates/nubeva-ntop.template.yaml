AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys ntop as part of the Nubeva TLS Decrypt & Open Source Tools
Parameters:
  APIKey:
    Description: "The Token for your Prisms account"
    Type: String
  ToolAdmin:
    Description: The user name that is associated with the admin account for the tools that are being created.
    Type: String
    Default: tooladmin
    MinLength: 4
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only 4-16 alphanumeric characters.
  ToolPassword:
    Description: The password that is associated with the master user account for the cluster that is being created.
    NoEcho: true
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only 8-32 alphanumeric characters
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC to install into.
  RemoteAccessCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: The CIDR IP range that is permitted to access the instances. We recommend
      that you set this value to a trusted IP range.
    Type: String
  PrivateSubnet1ID:
    Description: Subnet Id for Private Subnet1
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: Subnet Id for Private Subnet2
    Type: AWS::EC2::Subnet::Id
  NumberOfNodes:
    Description: 'The number of EC2 instances'
    Type: Number
    Default: 1
  MaximumNodes:
    Type: Number
    Default: 6
    Description: Maximum number of instances that can be launched in your tool cluster.
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  NodeInstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
    - t3.medium
    - t3.large
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - r5.large
    - r5.xlarge
    - r5.2xlarge
    - r5.4xlarge
    - r5.12xlarge
    - r5.24xlarge
    ConstraintDescription: Please choose a valid instance type.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Nubeva configuration
        Parameters:
        - APIKey
        - ToolAdmin
        - ToolPassword
      - Label:
          default: "Network Configuration"
        Parameters:
          - VPCID
          - RemoteAccessCIDR
      - Label:
          default: "Autoscaling Configuration"
        Parameters:
          - KeyPairName
          - NodeInstanceType
          - NumberOfNodes
          - MaximumNodes

Mappings:
  AWSAMIRegionMap:
    AMI:
      awslinux2: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    ap-northeast-1:
      awslinux2: "ami-0c3fd0f5d33134a76"
    ap-northeast-2:
      awslinux2: "ami-095ca789e0549777d"
    ap-south-1:
      awslinux2: "ami-0d2692b6acea72ee6"
    ap-southeast-1:
      awslinux2: "ami-01f7527546b557442"
    ap-southeast-2:
      awslinux2: "ami-0dc96254d5535925f"
    eu-central-1:
      awslinux2: "ami-0cc293023f983ed53"
    eu-north-1:
      awslinux2: "ami-3f36be41"
    eu-west-1:
      awslinux2: "ami-0bbc25e23a7640b9b"
    eu-west-2:
      awslinux2: "ami-0d8e27447ec2c8410"
    eu-west-3:
      awslinux2: "ami-0adcddd3324248c4c"
    us-east-1:
      awslinux2: "ami-0b898040803850657"
    us-east-2:
      awslinux2: "ami-0d8f6eb4f641ef691"
    us-west-1:
      awslinux2: "ami-056ee704806822732"
    us-west-2:
      awslinux2: "ami-082b5a644766e0e6f"
    ca-central-1:
      awslinux2: "ami-0d4ae09ec9361d8ac"
    sa-east-1:
      awslinux2: "ami-058943e7d9b9cabfb"

Resources:
  NtopSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ntopng Security Group
      VpcId: !Ref 'VPCID'
  NtopSecurityGroupSSHinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "NtopSecurityGroup"
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: !Ref "RemoteAccessCIDR"
  NtopSecurityGroupVXLANinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "NtopSecurityGroup"
      CidrIp: !Ref 'VPCCIDR'
      IpProtocol: udp
      FromPort: 4789
      ToPort: 4789
  NtopSecurityGroupntopinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "NtopSecurityGroup"
      IpProtocol: tcp
      FromPort: 3000
      ToPort: 3000
      CidrIp: !Ref "RemoteAccessCIDR"
  NtopSecurityGroupOutbound:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref "NtopSecurityGroup"
      CidrIp: 0.0.0.0/0
      IpProtocol: "-1"
      FromPort: -1
      ToPort: -1

  NtopInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
      - !Ref NtopIAMRole

  NtopIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: NtopASG
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'autoscaling:DescribeAutoScalingGroups'
            - 'autoscaling:DescribeAutoScalingInstances'
            - 'ec2:DescribeInstances'
            Resource:
            - '*'

  NtopELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
          - !Ref PrivateSubnet1ID
          - !Ref PrivateSubnet2ID
      Type: network
      Scheme: internal

  NtopViewerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NtopELB
      Port: 3000
      Protocol: TCP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NtopWWWTargetGroup

  NtopCaptureListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref NtopELB
      Port: 4789
      Protocol: UDP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NtopVXLANTargetGroup

  NtopWWWTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPCID
      Port: 3000
      Protocol: TCP_UDP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3

  NtopVXLANTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPCID
      Port: 4789
      Protocol: UDP
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 10
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      HealthCheckPort: '3000'

  NtopELBTrafficMirrorTarget:
    Type: AWS::EC2::TrafficMirrorTarget
    Properties:
      Description: "ntopELB"
      NetworkLoadBalancerArn: !Ref NtopELB

  NtopAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - !Ref PrivateSubnet1ID
      - !Ref PrivateSubnet2ID
      LaunchConfigurationName: !Ref NtopLaunchConfiguration
      MinSize: '1'
      MaxSize: !Ref 'MaximumNodes'
      TargetGroupARNs:
        - !Ref NtopWWWTargetGroup
        - !Ref NtopVXLANTargetGroup
      DesiredCapacity: !Ref 'NumberOfNodes'
      MetricsCollection:
      - Granularity: 1Minute
        Metrics:
        - GroupInServiceInstances
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}
        PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Count: 1
        Timeout: PT10M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: !Ref NumberOfNodes
        MaxBatchSize: 1
        PauseTime: PT10M
        SuspendProcesses:
        - AlarmNotification
        WaitOnResourceSignals: true
  NtopScaleOutPolicy:
    Type : AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref NtopAutoScalingGroup
      AdjustmentType: 'ChangeInCapacity'
      Cooldown: '120'
      ScalingAdjustment: 1
  NtopScaleOutAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Join:
        - '-'
        - - !Ref 'AWS::StackName'
          - 'ntopng-traffic-high'
      AlarmActions:
        - !Ref 'NtopScaleOutPolicy'
      AlarmDescription: 'This metric monitors high ntopng network utilization'
      ComparisonOperator: 'GreaterThanOrEqualToThreshold'
      EvaluationPeriods: 2
      MetricName: 'NetworkIn'
      Namespace: 'AWS/EC2'
      Period: 60
      Statistic: 'Average'
      Threshold: 15000000000
      Dimensions:
        - Name: 'AutoScalingGroupName'
          Value: !Ref NtopAutoScalingGroup
  NtopScaleInPolicy:
    Type : AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref NtopAutoScalingGroup
      AdjustmentType: 'ChangeInCapacity'
      Cooldown: '120'
      ScalingAdjustment: -1
  NtopScaleInAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName:
        Fn::Join:
        - '-'
        - - !Ref 'AWS::StackName'
          - 'ntopng-traffic-low'
      AlarmActions:
        - !Ref 'NtopScaleInPolicy'
      AlarmDescription: 'This metric monitors ntopng network utilization'
      ComparisonOperator: 'LessThanOrEqualToThreshold'
      EvaluationPeriods: 2
      MetricName: 'NetworkIn'
      Namespace: 'AWS/EC2'
      Period: 60
      Statistic: 'Average'
      Threshold: 7500000000
      Dimensions:
        - Name: 'AutoScalingGroupName'
          Value: !Ref NtopAutoScalingGroup

  NtopLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          Configure:
            - "ConfigStartup"
            - "AddRepo"
          Install:
            - "InstallServices"
            - "InstallNurxAgent"
          Start:
            - "StartNtop"
        ConfigStartup:
          commands:
            01_addintrclocal:
              command: "echo 'yum update -y' >> /etc/rc.local"
          02_adduprclocal:
            04_chmod:
              command: "chmod +x /etc/rc.d/rc.local"
        AddRepo:
          commands:
            01_wget:
              command: "wget http://packages.ntop.org/centos-stable/ntop.repo -O /etc/yum.repos.d/ntop.repo"
            02_sed:
              command: "sed -i 's/$releasever/7/g' /etc/yum.repos.d/ntop.repo"
        InstallServices:
          packages:
            yum:
              wget: []
              cento: []
              redis: []
              docker: []
          services:
            sysvinit:
              redis:
                enabled: true
                ensureRunning: true
              docker:
                enabled: true
                ensureRunning: true
        InstallNurxAgent:
          commands:
            01_download_and_install:
              command:
                !Sub |
                  docker run -v /:/host -v /var/run/docker.sock:/var/run/docker.sock --cap-add NET_ADMIN --name nubeva-rx -d --restart=on-failure --net=host nubeva/nurx --accept-eula --nutoken ${APIKey}
        #InstallVXLANInterface:
        #  commands:
        #    01_createVXLAN:
        #      command: "ip link add vxlan111 type vxlan id 111 remote 0.0.0.0 dstport 4789"
        #    02_interfaceUp:
        #      command: "ip link set vxlan111 up"
        #    03_autoLaunchVXLAN:
        #      command: "echo 'ip link add vxlan111 type vxlan id 111 remote 0.0.0.0 dstport 4789' >> /etc/rc.local"
        #    04_addsmorerclocalupdate:
        #      command: "echo 'ip link set vxlan111 up' >> /etc/rc.local"

        StartNtop:
          commands:
            01_download_and_install:
              command: "docker run --net=host --name ntopng -dit -p 3000:3000 lucaderi/ntopng-docker"
            #This doesnt work at present
            #02_setupToolAdmin:
            #  command: !Sub
            #    - "echo -n \"${password}\" | md5sum | xargs -I {} redis-cli SET ntopng.user.${admin}.password {}"
            #    - {admin: !Ref ToolAdmin, password: !Ref ToolPassword}

    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          amazon-linux-extras install epel -y
          yum update -y
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource NtopLaunchConfiguration --configsets Configure,Install,Start
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource NtopAutoScalingGroup
      InstanceType: !Ref NodeInstanceType
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - awslinux2
      SecurityGroups:
      - !Ref "NtopSecurityGroup"
      IamInstanceProfile: !Ref NtopInstanceProfile
      KeyName:
        Ref: KeyPairName
      AssociatePublicIpAddress: false


Outputs:
  Login:
    Description: The username & password defaults are in the documentation
    Value: "https://docs.nubeva.com/ntopng"
  URL:
    Description: The URL for any instance's ntop Dashboard
    Value: !Sub
        - "http://${NtopDNS}:3000"
        - NtopDNS: !GetAtt NtopELB.DNSName
