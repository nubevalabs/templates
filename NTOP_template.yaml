AWSTemplateFormatVersion: "2010-09-09"
Parameters:

  myKeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair to enable SSH access to the ECS instances.
  VPCid:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC to install into.
  Subnetid:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select at least one subnet in your selected VPC, it should have internet access provisioned via an Internet gateway. For a high availability configuration select two or more subnets in another availability zone.
  CIDR:
    Type: String
    Description: The CIDR notation of address to access this tool
    Default: '0.0.0.0/0'
  DesiredInstances:
    Description: 'The number of EC2 instances'
    Type: Number
    Default: 2
  MaxSize:
    Type: Number
    Default: '6'
    Description: Maximum number of instances that can be launched in your tool cluster.
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues: [t2.micro, t2.small, t2.medium, t2.large, t3.micro, t3.small, t3.medium,
      t3.large, t3.xlarge, t3.2xlarge, m3.medium, m3.large, m3.xlarge, m3.2xlarge, m4.large,
      m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge, m5.large, m5.xlarge, m5.2xlarge,
      m5.4xlarge, m5.12xlarge, m5.24xlarge, c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge,
      c4.8xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge, r4.large, r4.xlarge,
      r4.2xlarge, r4.4xlarge, r4.8xlarge, r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r5.12xlarge,
      r5.24xlarge, i2.xlarge, i2.2xlarge, i2.4xlarge, i2.8xlarge, i3.large, i3.xlarge, i3.2xlarge,
      i3.4xlarge, i3.8xlarge, i3.16xlarge, c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.8xlarge]
    ConstraintDescription: Please choose a valid instance type.
  CustomAMI:
    Description: AMI ID -- Change if custom AMI is desired
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VPCid
          - Subnetid
          - CIDR
      - Label:
          default: "Autoscaling Configuration"
        Parameters:
          - myKeyPair
          - InstanceType
          - CustomAMI
          - DesiredInstances
          - MaxSize
    ParameterLabels:
      VPC:
        default: "Which VPC should this be deployed to?"

Conditions:
  HasKeyName: !Not [!Equals [!Ref myKeyPair, '']]

Resources:
  # Security Groups
  ToolSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Tool Security Group
      VpcId: !Ref 'VPCid'
  # Inbound- allow ssh
  SecurityGroupSSHinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "ToolSecurityGroup"
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: !Ref "CIDR"
  # Inbound- allow VXLAN
  ToolSecurityGroupVXLANinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "ToolSecurityGroup"
      # This needs a lambda function to call: https://github.com/stelligent/cloudformation-custom-resources/tree/master/lambda
      CidrIp: 10.0.0.0/8
      IpProtocol: udp
      FromPort: '4789'
      ToPort: '4789'
  # Inbound- allow ntop
  ToolSecurityGroupntopinbound:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref "ToolSecurityGroup"
      IpProtocol: tcp
      FromPort: '3000'
      ToPort: '3000'
      CidrIp: !Ref "CIDR"
  # Outbound- allow all
  ToolSecurityGroupOutbound:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !Ref "ToolSecurityGroup"
      CidrIp: 0.0.0.0/0
      IpProtocol: "-1"
      FromPort: '-1'
      ToPort: '-1'

  InstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
      - !Ref IAMRole

  IAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: asg
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'autoscaling:DescribeAutoScalingGroups'
            - 'autoscaling:DescribeAutoScalingInstances'
            - 'ec2:DescribeInstances'
            Resource:
            - '*'

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:  !Ref Subnetid
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 0
      MaxSize: !Ref 'MaxSize'
      DesiredCapacity: !Ref 'DesiredInstances'
      MetricsCollection:
      - Granularity: 1Minute
        Metrics:
        - GroupInServiceInstances
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}
        PropagateAtLaunch: 'true'
    CreationPolicy:
      ResourceSignal:
        Count: 0
        Timeout: PT5M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: !Ref DesiredInstances
        MaxBatchSize: '1'
        PauseTime: PT5M
        SuspendProcesses:
        - AlarmNotification
        WaitOnResourceSignals: 'true'

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          # List the configSets and the config keys they contain:
          Configure:
            - "configVxlan"
            - "configStartup"
            - "addRepo"
          Install:
            - "installServices"
          Start:
            - "startNtop"

        # Config key: configVxlan
        configVxlan:
          commands:
            01_interface:
              command: "ip link add vxlan111 type vxlan id 111 remote 0.0.0.0 dstport 4789"
            02_bringup:
              command: "ip link set vxlan111 up"

        # Config key: configStartup
        configStartup:
          commands:
            01_addintrclocal:
              command: "echo 'ip link add vxlan111 type vxlan id 111 remote 0.0.0.0 dstport 4789' >> /etc/rc.local"
            02_adduprclocal:
              command: "echo 'ip link set up dev vxlan111' >> /etc/rc.local"
            03_chmod:
              command: "chmod +x /etc/rc.d/rc.local"

        # Config key: addRepo
        addRepo:
          commands:
            01_wget:
              command: "wget http://packages.ntop.org/centos-stable/ntop.repo -O /etc/yum.repos.d/ntop.repo"
            02_sed:
              command: "sed -i 's/$releasever/7/g' /etc/yum.repos.d/ntop.repo"

        # Config key: installServices
        installServices:
          packages:
            yum:
              pfring: []
              n2disk: []
              nprobe: []
              ntopng: []
              ntopng-data: []
              cento: []
          services:
            sysvinit:
              redis:
                enabled: true
                ensureRunning: true

        # Config key: startNtop
        startNtop:
          commands:
            01_launchntop:
              command: "ntopng -i vxlan111"

    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          yum update -y
          yum update -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource LaunchConfiguration --configsets Configure,Install,Start
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource AutoScalingGroup
      InstanceType: !Ref InstanceType
      ImageId: !Ref CustomAMI
      SecurityGroups:
      - !Ref "ToolSecurityGroup"
      IamInstanceProfile: !Ref InstanceProfile
      KeyName:
        Ref: myKeyPair
      AssociatePublicIpAddress: "true"


#Outputs:
#  URL:
#    Description: "The URL of this instance's nTop Dashboard"
#    Value: !Sub "http://${MyServerInstance.PublicIp}:3000"
#  URL2:
#    Description: "Point VXLan 111 trafic to:"
#    Value: !Sub "${MyServerInstance.PrivateIp}"
