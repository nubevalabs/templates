AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  BaseUrl:
    Type: String
  ProjectId:
    Type: String
Resources:
  DDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "clientrandom"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "clientrandom"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
  WriteCapacityScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 15
      MinCapacity: 5
      ResourceId: !Join
        - /
        - - table
          - !Ref DDBTable
      RoleARN: !GetAtt ScalingRole.Arn
      ScalableDimension: dynamodb:table:WriteCapacityUnits
      ServiceNamespace: dynamodb
  ScalingRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - application-autoscaling.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "dynamodb:DescribeTable"
                  - "dynamodb:UpdateTable"
                  - "cloudwatch:PutMetricAlarm"
                  - "cloudwatch:DescribeAlarms"
                  - "cloudwatch:GetMetricStatistics"
                  - "cloudwatch:SetAlarmState"
                  - "cloudwatch:DeleteAlarms"
                Resource: "*"
  WriteScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: WriteAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref WriteCapacityScalableTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 50.0
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        PredefinedMetricSpecification:
          PredefinedMetricType: DynamoDBWriteCapacityUtilization
  NubevaKeyAdministrator:
    Type: AWS::IAM::Group
    Properties :
      GroupName: !Join
        - '-'
        - - 'NubevaKeyAdministrator'
          - !Ref DDBTable
  NubevaAgent:
    Type: AWS::IAM::User
    Properties:
      UserName: !Join
        - '-'
        - - 'NuAgent'
          - !Ref DDBTable
      Path: "/"
  NubevaReceiver:
    Type: AWS::IAM::User
    Properties:
      UserName: !Join
        - '-'
        - - 'NuRx'
          - !Ref DDBTable
      Path: "/"
  AgentAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref NubevaAgent
  RxAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName:
        !Ref NubevaReceiver
  KeyWriter:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref NubevaAgent
      PolicyName: !Join
        - '-'
        - - 'NuKeyWriter'
          - !Ref DDBTable
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "dynamodb:PutItem"
              - "dynamodb:BatchWriteItem"
            Resource: !GetAtt DDBTable.Arn
  KeyReader:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref NubevaReceiver
      PolicyName: !Join
        - '-'
        - - 'NuKeyReader'
          - !Ref DDBTable
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "dynamodb:GetItem"
              - "dynamodb:BatchGetItem"
            Resource: !GetAtt DDBTable.Arn
  KeyAdmin:
    Type: AWS::IAM::Policy
    Properties:
      Groups:
        - !Ref NubevaKeyAdministrator
      PolicyName: "NuKeyAdmin"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:*"
            Resource: !GetAtt DDBTable.Arn
â€‹
Outputs:
  SendToNubeva:
    Value: !Join
      - ''
      - - !Ref BaseUrl
        - "?"
        - "ProjectID="
        - !Ref ProjectId
        - "&ssldbreadauth="
        - Fn::Base64: !Sub
            - '{"type":"ddb","domain":"${Domain}","region":"${Region}","ak":"${AccessKey}","sk":"${SecretKey}"}'
            - Domain: !Ref DDBTable
              Region: !Ref AWS::Region
              AccessKey: !Ref RxAccessKey
              SecretKey: !GetAtt RxAccessKey.SecretAccessKey
        - "&ssldbwriteauth="
        - Fn::Base64: !Sub
            - '{"type":"ddb","domain":"${Domain}","region":"${Region}","ak":"${AccessKey}","sk":"${SecretKey}"}'
            - Domain: !Ref DDBTable
              Region: !Ref AWS::Region
              AccessKey: !Ref AgentAccessKey
              SecretKey: !GetAtt AgentAccessKey.SecretAccessKey
